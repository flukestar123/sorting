using moore voting algorithm
step1- we find the candidate which is majority in the array
step2-we check if the candidate is in majority or not.
//aprroach is consider the first element present in the array is a majority element now initialise count with 1 and res=0 res tells us the index of the majority element
now we loop from i=1 to n-1 now if check if arr[res]==arr[i] if it is true we increment the count else we decrement the count if it any particular index if the count
value becomes 0 we just do res=that particular index we are on and count=1 now after loop is terminated we get the index of the majority ele so just do another loop and
check if that element count is greater than n/2


now the intuition behind this problem is very simple we consider first ele as majority now if its matching the element gets vote this means element is in more power now
that means it still majority if no match we decrease the count decreasing means this element is nullyfying that majority ele and if count==0 means majority and 
other elements have nullify each other so we now update count and res and consider this new ele as majority because all the rest ele have nullify each other and now
we consider this as majority..
refer https://youtu.be/NgLeC7DeWn4 after 12:00

int majorityElement(int arr[], int n)
{
    int count=1; int res=0;
    for(int i=1; i<n; i++){
        if(arr[res] == arr[i])
            count++;
        else
            count--;
            
        if(count==0){
            count=1;
            res=i;
        }
    }
    
    //2nd   res 
    count=0;
    for(int i=0;i<n;i++){
        if(arr[res]==arr[i])
            count++;
    }
    
    if(count <= (n/2))
        return -1;
    else
        return arr[res];
}

///see we have made changes to code the below is now more intuitve to udersstand
    int majorityElement(vector<int>& nums) {
        int count=1,res=0;
        int i;
        for(i=1;i<nums.size();i++)
        {
              if(count==0)
            {
                res=i;
                count=1;
            }
           else  if(nums[res]==nums[i])
            count++;
            else
            count--;
          
        }
    
        return nums[res];

    }
    see i tell you what changes i have made see first of all if the count is becoming 0 means majority which was now and other elements have nullified each other
    so this new element which comes should now be the majority if the count is not 0 we check 2nd else if cond and if its a match then inc count else we decrement
    the count.. now majority 2 element explanation of leetcode aritcle is gold do check that out
    
    
